{
    "openapi": "3.1.0",
    "info": {
        "title": "API",
        "version": "0.1.0"
    },
    "servers": ["https://api.avaturn.live"],
    "paths": {
        "/api/v1/sessions": {
            "post": {
                "summary": "Create Session",
                "description": "Initiates a session.\n\n<Warning>\n  Call this endpoint from your backend.\n  You must not expose your API Key in your frontend code.\n</Warning>\n\nUpon successful creation, the API returns a session token that can be safely used in Web SDK.",
                "operationId": "create_session_api_v1_sessions_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/SessionConfig"
                                    }
                                ],
                                "title": "Config",
                                "default": {
                                    "avatar_id": "jane_20240829"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_CreateSessionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/sessions/{id}/tasks": {
            "post": {
                "summary": "Create Speech Task",
                "description": "Adds the text to the avatar speech queue.\nIf the avatar is already speaking, the text fragment is queued to be spoken at a later time.\nNothing is said until you connect or while you're disconnected.",
                "operationId": "append_text_api_v1_sessions__id__tasks_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "id",
                            "description": "Session ID"
                        },
                        "description": "Session ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_append_text_api_v1_sessions__id__tasks_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_SessionSayResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/sessions/{id}": {
            "delete": {
                "summary": "Terminate Session",
                "description": "Terminates the session.\nIf the avatar is still talking, it kills the session anyway.",
                "operationId": "delete_session_api_v1_sessions__id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "id",
                            "description": "Session ID"
                        },
                        "description": "Session ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Body_append_text_api_v1_sessions__id__tasks_post": {
                "properties": {
                    "text": {
                        "type": "string",
                        "title": "Text",
                        "description": "Text to say"
                    }
                },
                "type": "object",
                "required": [
                    "text"
                ],
                "title": "Body_append_text_api_v1_sessions__id__tasks_post"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "SessionConfig": {
                "properties": {
                    "avatar_id": {
                        "type": "string",
                        "title": "Avatar Id",
                        "description": "Avatar ID",
                        "default": "jane_20240829"
                    }
                },
                "type": "object",
                "title": "SessionConfig"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "_CreateSessionResponse": {
                "properties": {
                    "session_id": {
                        "type": "string",
                        "title": "Session Id",
                        "description": "Session ID"
                    },
                    "token": {
                        "type": "string",
                        "title": "Token",
                        "description": "Session token for Web SDK"
                    }
                },
                "type": "object",
                "required": [
                    "session_id",
                    "token"
                ],
                "title": "_CreateSessionResponse"
            },
            "_SessionSayResponse": {
                "properties": {
                    "task_id": {
                        "type": "string",
                        "title": "Task Id",
                        "description": "Speech task ID"
                    }
                },
                "type": "object",
                "required": [
                    "task_id"
                ],
                "title": "_SessionSayResponse"
            }
        },
        "securitySchemes": {
            "HTTPBearer": {
                "type": "http",
                "description": "Project developer API token",
                "scheme": "bearer"
            }
        }
    }
}
